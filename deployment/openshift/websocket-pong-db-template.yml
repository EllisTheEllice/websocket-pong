apiVersion: v1
kind: Template
metadata:
  name: ${APPLICATION_NAME}-template
  labels:
     name: ${APPLICATION_NAME}
parameters:
  - name: API_VERSION
    value: "v1"
  - name: APPLICATION_NAME
    description: "The name of the application to deploy"
    value: "websocket-pong-db"
  - name: CLUSTER_IP
    value: "172.30.177.28"
  - name: NAMESPACE
    value: "default"
  - name: "GROUP"
    value: "websocket-pong"
objects:
  - apiVersion: ${API_VERSION}
    kind: Service
    metadata:
      labels:
        app: ${GROUP}
      name: ${APPLICATION_NAME}
      namespace: ${NAMESPACE}
      selfLink: /api/${API_VERSION}/namespaces/${NAMESPACE}/services/${APPLICATION_NAME}
    spec:
      clusterIP: ${CLUSTER_IP}
      ports:
        - name: 3306-tcp
          port: 3306
          protocol: TCP
          targetPort: 3306
      selector:
        deploymentconfig: ${APPLICATION_NAME}
      sessionAffinity: None
      type: ClusterIP  
  - apiVersion: apps.openshift.io/${API_VERSION}
    kind: DeploymentConfig
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftWebConsole
      generation: 2
      labels:
        app: ${GROUP}
      name: ${APPLICATION_NAME}
      namespace: ${NAMESPACE}
      selfLink: >-
        /apis/apps.openshift.io/${API_VERSION}/namespaces/${NAMESPACE}/deploymentconfigs/${APPLICATION_NAME}
    spec:
      replicas: 1
      selector:
        app: ${GROUP}
        deploymentconfig: ${APPLICATION_NAME}
      strategy:
        activeDeadlineSeconds: 21600
        resources: {}
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          annotations:
            openshift.io/generated-by: OpenShiftWebConsole
          creationTimestamp: null
          labels:
            app: ${GROUP}
            deploymentconfig: ${APPLICATION_NAME}
        spec:
          containers:
            - image: >-
                sengbatz/${APPLICATION_NAME}:latest
              imagePullPolicy: Always
              name: ${APPLICATION_NAME}
              ports:
                - containerPort: 3306
                  protocol: TCP
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /var/lib/mysql
                  name: ${APPLICATION_NAME}-1
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
          volumes:
            - emptyDir: {}
              name: ${APPLICATION_NAME}-1
      test: false
      triggers:
        - type: ConfigChange
        - imageChangeParams:
            automatic: true
            containerNames:
              - ${APPLICATION_NAME}
            from:
              kind: ImageStreamTag
              name: '${APPLICATION_NAME}:latest'
              namespace: ${NAMESPACE}
          type: ImageChange
  - apiVersion: image.openshift.io/${API_VERSION}
    kind: ImageStream
    metadata:
      generation: 2
      labels:
        app: ${GROUP}
      name: ${APPLICATION_NAME}
      namespace: ${NAMESPACE}
      selfLink: /apis/image.openshift.io/${API_VERSION}/namespaces/${NAMESPACE}/imagestreams/${APPLICATION_NAME}
    spec:
      lookupPolicy:
        local: false
      tags:
        - annotations:
            openshift.io/generated-by: OpenShiftWebConsole
            openshift.io/imported-from: sengbatz/${APPLICATION_NAME}
          from:
            kind: DockerImage
            name: sengbatz/${APPLICATION_NAME}
          generation: 2
          importPolicy: {}
          name: latest
          referencePolicy:
            type: Source
